# Name of this GitHub Actions workflow.
name: Semgrep

on:
  # Scan changed files in PRs (diff-aware scanning):
  pull_request: {}
  # Scan on-demand through GitHub Actions interface:
  workflow_dispatch: {}
  # Scan mainline branches if there are changes to .github/workflows/semgrep.yml:
  push:
    branches:
      - main
      - master
    paths:
      - .github/workflows/test.yml

permissions:
  contents: read

jobs:
  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep/ci
    # If you are self-hosting, change the following `runs-on` value:
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
      - uses: actions/checkout@v4
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci
        env:
          # Connect to Semgrep AppSec Platform through your SEMGREP_APP_TOKEN.
          # Generate a token from Semgrep AppSec Platform > Settings
          # and add it to your GitHub secrets.
          SEMGREP_APP_TOKEN: "43c0b71925de0b126a66ec56016d80d697477c1b427937308f9aa676f352a46d"
      - name: Upload Semgrep Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: ./ # Change this to the directory where the Semgrep results are stored

  download-artifact:
    name: Download Semgrep Results
    runs-on: ubuntu-latest
    needs: semgrep
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: semgrep-results
      - name: Display Semgrep Results
        run: |
          ls -alh # Or any other command to interact with the downloaded artefact
